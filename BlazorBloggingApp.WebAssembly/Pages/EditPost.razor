@page "/edit-post/{PostId:int}"
@using BlazorBloggingApp.WebAssembly.Services
@code {
    [Parameter]
    public int PostId { get; set; }

    // Add properties for Title and Content that will be bound to form inputs
    public string Title { get; set; } = string.Empty;
    public string Content { get; set; } = string.Empty;

    // Inject the BlogPostService to fetch and update the post
    [Inject]
    public IBlogPostService BlogPostService { get; set; } = default!;
    [Inject]
    public NavigationManager NavigationManager { get; set; } = default!;

    protected override async Task OnInitializedAsync()
    {
        var post = await BlogPostService.GetPostByIdAsync(PostId);
        if (post != null)
        {
            Title = post.Title;
            Content = post.Content;
        }
    }

    // Method to update the post
    private async Task UpdatePost()
    {
        // Assume UpdateBlogPostAsync updates the post and returns a success flag or the updated post
        var updated = await BlogPostService.UpdateBlogPostAsync(PostId, Title, Content);
        if (updated)
        {
            NavigationManager.NavigateTo($"/post/{PostId}");
        }
    }

    void CancelEdit()
    {
        NavigationManager.NavigateTo($"/post/{PostId}");
    }
}

<h3>Edit Post</h3>

<EditForm Model="@this" OnValidSubmit="UpdatePost" class="p-4">
    <div class="mb-3">
        <label for="title" class="form-label">Title</label>
        <InputText id="title" class="form-control" @bind-Value="Title" />
    </div>
    <div class="mb-3">
        <label for="content" class="form-label">Content</label>
        <InputTextArea id="content" class="form-control" @bind-Value="Content" style="height: 200px;" />
    </div>
    <button type="submit" class="btn btn-primary">Update Post</button>
    <button class="btn btn-secondary" @onclick="CancelEdit">Cancel</button>
</EditForm>